import React,{useState} from "react";
import TextField from '@material-ui/core/TextField';
import { Button  } from "@material-ui/core";
import Alert from './Alert'
import axios from 'axios'


function Form({signUp,setsignUp,setUserToken,setUserEmail}) {

    const [email, setEmail] = useState("");
    const [fullName, setFullName] = useState("");
    const [password, setPassword] = useState("");
    const [tokenPhase, setTokenPhase] = useState(false);
    const [token, setToken] = useState("");
    const [errorMessage, setErrorMessage] = useState("");
    const [errorStatus, setErrorStatus] = useState(0);

    //alert state variable
    const [openAlert, setOpenAlert] = React.useState(false);

    const handleShow = () => {
    setOpenAlert(true);
  };

  const handleClose = (event, reason) => {
    if (reason === 'clickaway') {
      return;
    }

    setOpenAlert(false);
  };


    function HandleLoginUI() {
        setsignUp(!signUp);
    }

    //this method update the state at every modification in the input fields
    function HandleTyping(event) {

        let value=  event.target.value,
        name=event.target.id;
        console.log(value)
        console.log(name)
        if(name==='email') setEmail(value);
        else if(name==='password') setPassword(value);
        else if(name==='fullName') setFullName(value);
        else if(name==='token') setToken(value);
        
    }

    //this function handles auth process it collects user data and send a post http request to verify the email and the password
    function Authentication(event) {
        //prevent the browser to refresh..
        event.preventDefault();
        console.log("auth process begins..");
        if(signUp){
        //signUp process
        axios(
            {
                method:"POST",
                url:"http://localhost:8080/createUser",
                data:{
                    userName:fullName,
                    email:email,
                    password:password
                }
                
            }
        )
        .then( response => {
            console.log(response);
            //modifying the state to change the UI to enterToken UI
            setsignUp(false)
            setTokenPhase(true)
        })
        .catch(error =>{
            if (error.response) {
                // The request was made and the server responded with a status code
                // that falls out of the range of 2xx
                let message=error.response.data.message,
                status=error.response.status;
                //set the error state variable
                setErrorMessage(message);
                setErrorStatus(status);
                setOpenAlert(true);
              }
              else if (error.request) {
                // The request was made but no response was received
                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of
                // http.ClientRequest in node.js
                console.log(error.request);
              }  
        } )
    }
    else{
        //login process
        axios(
            {
                method:"POST",
                url:"http://localhost:8080/login?email="+email+"&password="+password
                
            }
        )
        .then( response => {
            console.log(response);
            //modifying the state to change the UI to enterToken UI
            setUserToken( response.data.token);
            setUserEmail(email)
            

        })
        .catch(error =>{
            if (error.response) {
                // The request was made and the server responded with a status code
                // that falls out of the range of 2xx
                let message=error.response.data.message,
                status=error.response.status;
                //set the error state variable
                setErrorMessage(message);
                setErrorStatus(status);
                setOpenAlert(true);
              }
              else if (error.request) {
              //  The request was made but no response was received
              //  `error.request` is an instance of XMLHttpRequest in the browser and an instance of
              //  http.ClientRequest in node.js
               console.log(error.request);
             }  
        } )
    }
        
    }
    //send the provided token by the user for verification in the backend
    function sendToken() {
        console.log("sendToken process ...")
      
        axios(
           {
               method:"POST",
               url:"http://localhost:8080/verifyEmail?email="+email+"&providedToken="+token
            }   
            
        )
        .then(response =>{
            console.log(response)
            //we set the token generated by the back-end to state variable 'token'
             setUserToken( response.data.token);
             setUserEmail(email)
        })
        .catch(err => { console.log(err)})
    }


    return(<>
        <form  style={{backgroundColor:"#eeffff"}} onSubmit={Authentication} >
        
         { !tokenPhase &&<>
            <h2> {signUp? "Sign up for your account":"Log in to continue to Trellox" } </h2>

            { signUp && <div><TextField id="fullName" type="text" label="Enter FullName" value={fullName} onChange={HandleTyping} required  /><br/></div>}
            
            <TextField id="email" type="email" label="Enter Email Address" value={email} onChange={HandleTyping} required  /><br/>
            
            <TextField id="password" type="password" label="Enter password" value={password} onChange={HandleTyping} required    /><br/><br/>
            
            <Button variant="contained" color="primary" type="submit" >{signUp ? "Sign Up":"Continue"}</Button><br/><br/>
         
           <span id="switch-login" onClick={HandleLoginUI} >
       
            <p>{signUp?"Already have a Trellox  account? Log in":"Can't log in? Sign up for an account"}</p>
         
          </span>
          </>
        }
          {
              tokenPhase && <div>
              <h4>  {"We have sent a verification to this email address : "+email+".Please enter this code in the field below"}</h4>
              <TextField id="token" type="text" label="Enter Code" value={token} onChange={HandleTyping} required    /><br/><br/>
              <Button variant="contained" color="primary"  onClick={sendToken} >send Code</Button><br/><br/>
              </div>
          }
        </form>
       { errorMessage.length!==0 && <Alert message={errorMessage} status={errorStatus} openAlert={openAlert} handleClose={handleClose}  handleShow={handleShow} ></Alert> }
        </>
    )
    
}
export default Form;